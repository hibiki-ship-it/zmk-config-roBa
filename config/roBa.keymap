#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        DELcom {
            bindings = <&kp DEL>;
            key-positions = <9 21>;
        };

        MID {
            bindings = <&mkp MB3>;
            key-positions = <32 31>;
        };

        CTRL_Y {
            bindings = <&kp K_REDO>;
            key-positions = <0 34>;
        };

        CAP_SLOCK {
            bindings = <&kp CAPSLOCK>;
            key-positions = <37 38>;
        };
    };

    macros {
        scale: scale {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp C &kp A &kp L &kp E &kp RET>;
            label = "SCALE";
        };

        chamfer: chamfer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp H &kp A &kp M &kp F &kp E &kp R &kp RET>;
            label = "CHAMFER";
        };

        rotate: rotate {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp O &kp T &kp A &kp T &kp E &kp RET>;
            label = "ROTATE";
        };

        trim: trim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp R &kp I &kp M &kp RET>;
            label = "TRIM";
        };

        mirror: mirror {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp I &kp R &kp R &kp O &kp R &kp RET>;
            label = "MIRROR";
        };

        array_polar: arraypolar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp R &kp R &kp A &kp Y &kp P &kp O &kp L &kp A &kp R &kp RET>;
            label = "ARRAYPOLAR";
        };

        draw_order: draw_order {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp R &kp A &kp W &kp O &kp R &kp D &kp E &kp R &kp ENTER>;
            label = "DRAW_ORDER";
        };

        purge: purge {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp U &kp R &kp G &kp E &kp RET>;
            label = "PURGE";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp P &kp Y &kp RET>;
            label = "COPY";
        };

        explode: explode {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp X &kp P &kp L &kp O &kp D &kp E &kp RET>;
            label = "EXPLODE";
        };

        spline: spline {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp P &kp L &kp I &kp N &kp E &kp RET>;
            label = "SPLINE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R               &kp T                                      &kp Y             &kp U  &kp I     &kp O     &kp BACKSPACE
&kp A             &kp S         &kp D         &kp F               &kp G      &none            &lt 5 COMMA    &kp H             &kp J  &kp K     &kp L     &kp P
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V               &kp B      &kp ESC          &kp SEMICOLON  &kp N             &kp M  &mkp MB1  &mkp MB2  &kp SEMICOLON
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 INT_MUHENKAN  &lt 2 TAB  &lt 3 SPACE      &kp ENTER      &lt 4 INT_HENKAN                             &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        ACAD-1_Fn {
            bindings = <
&kp LS(LC(X))  &kp LC(LS(Y))  &scale  &chamfer  &kp LS(LA(LC(C)))                     &kp F1  &kp F2   &kp F3   &kp F4   &none
&none          &none          &none   &none     &none              &none       &none  &kp F5  &kp F6   &kp F7   &kp F8   &none
&none          &none          &none   &none     &none              &kp F8      &none  &kp F9  &kp F10  &kp F11  &kp F12  &none
&draw_order    &purge         &none   &none     &none              &none       &none  &none                              &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        ACAD-2_Con {
            bindings = <
&none                &none                &explode             &rotate  &trim                     &kp F1  &kp F2   &kp F3   &kp F4   &none
&array_polar         &spline              &none                &none    &none  &none       &none  &kp F5  &kp F6   &kp F7   &kp F8   &none
&none                &none                &copy                &mirror  &none  &trans      &none  &kp F9  &kp F10  &kp F11  &kp F12  &none
&kp LC(KP_NUMBER_4)  &kp LC(KP_NUMBER_1)  &kp LC(KP_NUMBER_5)  &none    &none  &none       &none  &none                              &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUM {
            bindings = <
&mt LSHFT PLUS   &kp N7           &kp N8        &kp N9        &kp BACKSPACE                                    &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&mt LSHFT MINUS  &kp NUMBER_4     &kp N5        &kp NUMBER_6  &kp DELETE     &none          &kp DOUBLE_QUOTES  &kp DOLLAR       &kp PERCENT   &kp CARET      &kp LEFT_BRACE        &kp RIGHT_BRACE
&mt LSHFT ASTRK  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL      &kp ENTER      &kp SQT            &kp AMPERSAND    &kp ASTERISK  &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&mt LSHFT SLASH  &kp KP_NUMBER_0  &kp KP_DOT    &none         &none          &none          &kp MINUS          &kp TILDE                                                           &kp UNDERSCORE
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        MOUSE {
            bindings = <
&none  &none  &none  &none  &none                              &none           &none           &kp UP_ARROW    &none      &kp HOME
&none  &none  &none  &none  &none  &none      &msc SCRL_RIGHT  &msc SCRL_UP    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp END
&none  &none  &none  &none  &none  &none      &msc SCRL_LEFT   &msc SCRL_DOWN  &none           &mkp MB4        &mkp MB5   &none
&none  &none  &none  &none  &none  &none      &none            &none                                                      &none
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        Bluetooth {
            bindings = <
&none  &none  &none  &none  &none                          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none  &none  &none      &none        &none         &none         &none         &none         &none
&none  &none  &none  &none  &none  &none      &bootloader  &none         &none         &none         &none         &bt BT_CLR
&none  &none  &none  &none  &none  &none      &none        &none                                                   &none
            >;
        };
    };
};
